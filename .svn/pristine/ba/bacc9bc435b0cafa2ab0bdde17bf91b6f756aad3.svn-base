package com.example.demo.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.lang.Nullable;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.dto.BoardDto;
import com.example.demo.dto.ReplyDto;
import com.example.demo.service.BoardService;

@Controller
public class BoardController {
	
	@Autowired
	BoardService boardService;
	
	//변수선언
	Map<String, Object> map = new HashMap<String, Object>();
	
	
	//리스트
	@RequestMapping("board/list")
	public String boardList(@RequestParam @Nullable String page, Model model) {
		
		Map<String, Object> map = boardService.listAll(page);
		model.addAttribute("map", map);
		return "/board/list";
	}
	
	
	
	//상세 페이지
	@RequestMapping("/board/view")
	public String boardView(@RequestParam String postNum, 
			@RequestParam String page, HttpServletRequest request, HttpServletResponse response, Model model) {
		
		Map<String, Object> map = boardService.boardView(postNum, page, request, response);
		model.addAttribute("map", map);
		return "/board/view";
	}
	
	
	
	//글쓰기
	@RequestMapping("/board/write")
	public String boardWrite() {
		return "/board/write";
	}
	
	//글쓰기 처리 - DB 저장
	@RequestMapping("/writeChk")
	public String writeChk(BoardDto boardDto, 
							@RequestPart MultipartFile file, 
							Model model) {
		
		boardService.boardWrite(boardDto, file);
		model.addAttribute("map", map);
		
		
		return "redirect:/board/list";
	}
	
	
	//수정하기 - View 페이지
	@RequestMapping("board/modify")
	public String boardModify(@RequestParam String postNum, @RequestParam String page, Model model) {
		
		Map<String, Object> map = boardService.boardModifyView(postNum, page);
		model.addAttribute("map", map);
		
		return "/board/modify";
	}
	
	
	//수정하기 - DB 저장하기
	@RequestMapping("/modifyChk")
	public String modifyChk(BoardDto boardDto, @RequestParam String page, 
			@RequestPart MultipartFile file, Model model) {
		
		boardService.modifyChk(boardDto, file);
		map.put("page", page);
		model.addAttribute("map", map);
		
		return "redirect:/board/list?page="+page;
	}
	
	
	//삭제하기
	@RequestMapping("/deleteChk")
	public String deleteChk(@RequestParam String postNum, @RequestParam String page, Model model) {
		
		boardService.deleteChk(postNum);
		map.put("page", page);
		model.addAttribute("map", map);
		
		return "redirect:/board/list?page="+page;
	}
	
	
	
	//답변하기 - View 페이지
	@RequestMapping("/replyView")
	public String replyView(@RequestParam String postNum, @RequestParam String page, Model model) {
		
		BoardDto boardDto = boardService.boardReplyView(postNum);
		map.put("page", page);
		map.put("boardDto", boardDto);
		model.addAttribute("map", map);
		
		return "/board/reply";
	}
	
	
	
	//답변하기 - DB 저장하기
	@RequestMapping("/replyChk")
	public String replyChk(BoardDto boardDto, @RequestParam String page, 
			@RequestPart MultipartFile file, Model model) {
		
		boardService.replyChk(boardDto, file);
		map.put("page", page);
		model.addAttribute("map", map);
		
		return "redirect:/board/list?page="+page;
	}
	
	
	
	
	//댓글 - DB 저장하기
//	@RequestMapping("/replyChk")
//	public String replyChk(ReplyDto replyDto, @RequestParam String page, Model model) {
//		
//		//비밀글 설정 X
//		String reSecret = replyDto.getReSecret();
//		if(!reSecret.equals("y")) {
//			replyDto.setReSecret("n");
//		}
//		
//		boardService.replyWrite(replyDto);
//		model.addAttribute("page", page);
//		model.addAttribute("postNum", replyDto.getPostNum());
//		
//		return "redirect:/board/view";
//	}
	

}//class
