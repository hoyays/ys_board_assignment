package com.example.demo.service;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.mapper.BoardMapper;

@Service
public class BoardPageNumbering {
	
	@Autowired
	BoardMapper boardMapper;

	//메소드
	//Board - 리스트 페이지 넘버링 계산
	public Map<String, Object> pageNum(int page, int limit, String category, String search) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		int listCount = 0;
		
		//전체 게시글 개수 확인
		if(search == null || search.equals("")) {
			//검색어 X
			listCount = boardMapper.listCount();
			
		}else if(search != null && category.equals("total")) {
			//검색어 O - (검색, 전체)
			listCount = boardMapper.listCountSearchTotal(search);
			
		}else if(search != null && category.equals("title")) {
			//검색어 O - (검색, 제목)
			listCount = boardMapper.listCountSearchTitle(search);
			
		}else if(search != null && category.equals("content")) {
			//검색어 O - (검색, 내용)
			listCount = boardMapper.listCountSearchContent(search);
			
		}
			
			
			
			
			
		
		
		
		// 최대 페이지 수
		int maxPage = (int) ((double) listCount / limit + 0.95);

		// 첫 페이지 번호
		int startPage = ((int) ((double) page / 10 + 0.9) - 1) * 10 + 1;

		// 마지막 페이지 번호
		int endPage = maxPage;
		// 단!!!
		// 마지막 페이지가 11이상일 경우
		if (endPage > startPage + 10 - 1) {
			endPage = startPage + 10 - 1;
		} // if
		
		map.put("page", page);
		map.put("listCount", listCount);
		map.put("maxPage", maxPage);
		map.put("startPage", startPage);
		map.put("endPage", endPage);
		map.put("search", search);
		map.put("category", category);
		
		return map;
	}

}//class
