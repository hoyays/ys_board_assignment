package com.example.demo.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dto.AjaxDto;
import com.example.demo.mapper.AjaxMapper;

@Service
public class AjaxServiceImplement implements AjaxService{

	@Autowired
	AjaxMapper ajaxMapper;
	@Autowired
	AjaxPageNumbering pageNumbering;
	
	
	//변수선언
	Map<String, Object> map = new HashMap<String, Object>();
	List<AjaxDto> list = new ArrayList<AjaxDto>();
	
	
	//리스트 View
	@Override
	public Map<String, Object> ajaxListAll(String listPage) {
		
		int page = 1;    //첫 페이지 초기화
		int limit = 10;  //1개 페이지에 노출되는 게시글 수(10개씩)
		
		//매개변수 listPage 데이터가 있으면 데이터 적용
		if (listPage != null && listPage != "") {
			page = Integer.parseInt(listPage);
		}
		
		int startRow = (page-1)*limit+1;   //선택한 페이지의 첫번째 줄 => 1, 11, 21...
		int endRow = startRow+limit-1;   //선택한 페이지의 마지막 줄 => 10, 20, 30 ...
		
		//DB에서 게시판 데이터 불러오기
		list = ajaxMapper.selectListAll(startRow, endRow);
		
		//페이지 넘버링 계산
		map = pageNumbering.pageNum(page, limit);
		
		//map에 담기
		map.put("list", list);
		
		return map;
	}
	

	//글쓰기
	//====== 참고 ======
	//1. 몰입코딩 - ajax 관련 강좌
	//https://www.youtube.com/watch?v=lQtOF1jY1eY
	//https://www.youtube.com/watch?v=MSyulawQ8s0
	
	//2. ajax 부모창 자식창 값 전달
	//https://pjsprogram.tistory.com/8
	
	//3. w3school - ajax, post, get
	//https://www.w3schools.com/jquery/jquery_ajax_get_post.asp

	@Override
	public Map<String, Object> ajaxDoWrite(String user_id, String title_ajax, String contents_ajax, String listPage) {
		
		int resultChk = ajaxMapper.insertWrite(user_id, title_ajax, contents_ajax);
		
		String msg = "";
		if(resultChk == 1) {
			msg = "정상적으로 등록되었습니다.";
		}
		
		//방금 저장된 내용을 포함하여 해당 페이지 리스트를 DB에서 다시 가져온다.
		int firstPage = 1;    //첫 페이지 초기화
		int limit = 10;  //1개 페이지에 노출되는 게시글 수(10개씩)
		
		//매개변수 listPage 데이터가 있으면 데이터 적용
		if (listPage != null && listPage != "") {
			firstPage = Integer.parseInt(listPage);
		}
		
		int startRow = (firstPage-1)*limit+1;   //선택한 페이지의 첫번째 줄 => 1, 11, 21...
		int endRow = startRow+limit-1;   //선택한 페이지의 마지막 줄 => 10, 20, 30 ...
		
		//DB에서 게시판 데이터 불러오기
		list = ajaxMapper.selectListAll(startRow, endRow);
		
		//페이지 넘버링 계산
		map = pageNumbering.pageNum(firstPage, limit);
		
		//map에 담기
		map.put("list", list);
		map.put("msg", msg);
		
		return map;
	}


	
	//상세 페이지
//	@Override
//	public Map<String, Object> ajaxView(String postNum_ajax, String page, 
//			HttpServletRequest request, HttpServletResponse response) {
//		
//		
//		//새로고침 조회수 증가 막기 처리 - 쿠키이용
//		//저장된 쿠키 불러오기
//		Cookie cookies[] = request.getCookies();
//		Map mapCookie = new HashMap<String, Object>();
//		if(request.getCookies() != null) {
//			for(int i=0; i<cookies.length; i++) {
//				Cookie obj = cookies[i];
//				mapCookie.put(obj.getName(), obj.getValue());
//			}//for
//		}//if
//		
//		//저장된 쿠키중에 read_count만 불러오기
//		String cookie_read_count = (String) mapCookie.get("read_count");
//		//저장될 새로운 쿠키값 생성
//		String new_cookie_read_count = "|" + postNum_ajax;
//		
//		//저장된 쿠키에 새로운 쿠키값이 존재하는지 검사
//		if(StringUtils.indexOfIgnoreCase(cookie_read_count, new_cookie_read_count) == -1) {
//			//없을 경우 쿠키 생성
//			Cookie cookie = new Cookie("read_count", cookie_read_count+new_cookie_read_count);
//			response.addCookie(cookie);
//			
//			//조회수 1증가 처리
//			ajaxMapper.updateHitNum(postNum_ajax);
//			
//		}
//		
//		
//		//DB에서 상세 페이지 내용 가져오기
//		AjaxDto ajaxDto = ajaxMapper.selectView(postNum_ajax);
//		
//		
//		//이전글, 다음글 불러오기
//		AjaxDto preDto = ajaxMapper.selectPreDto(postNum_ajax);
//		AjaxDto nextDto = ajaxMapper.selectNextDto(postNum_ajax);
//		
//		
//		map.put("ajaxDto", ajaxDto);
//		map.put("preDto", preDto);
//		map.put("nextDto", nextDto);
//		map.put("page", page);
//		
//		
//		return map;
//	}


	
	//글 삭제하기
//	@Override
//	public void ajaxDoDelete(String postNum_ajax) {
//		
//		ajaxMapper.deleteChk(postNum_ajax);
//	}


	
	//글 수정하기 View
//	@Override
//	public Map<String, Object> ajaxModify(String postNum_ajax) {
//		
//		AjaxDto ajaxDto = ajaxMapper.selectView(postNum_ajax);
//		map.put("ajaxDto", ajaxDto);
//		
//		return map;
//	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}//class
